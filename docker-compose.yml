services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lms-api
    restart: always
    ports:
      - "8081:8080"    # host 8081 → container 8080
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    volumes:
      - ./uploads:/home/appuser/uploads
    networks:
      - lms-network

  db:
    image: mysql:8.0
    container_name: lms-db
    restart: always
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    # jangan set MYSQL_USER=root atau MYSQL_PASSWORD di sini
    ports:
      - "${DB_HOST_PORT}:3306"    # host 3307 → container 3306
    volumes:
      - lms-db-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --sql-mode=""
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
    networks:
      - lms-network

volumes:
  lms-db-data:

networks:
  lms-network:
    driver: bridge
